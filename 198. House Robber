class Solution {
public:
    int rob(vector<int>& arr) {
        int prev = arr[0];
        int prev2=0;
	    for(int i=1;i<arr.size();i++){
	        int pick = arr[i];
	        if(i>1) pick += prev2;
	        int notpick = 0 + prev;
	        int curi = max(pick,notpick);
	        prev2=prev;
	        prev=curi;
	    }
	    
	    return prev;
    }
};
OR
class Solution {
public:
    int rob(vector<int>& nums) {
        int n=nums.size();
        if(n==0){
            return 0;
        }
        else if(n==1)
        {
            return nums[0];
        }
        else if(n==2){
            return max(nums[0],nums[1]);
        }
        vector<int> dp(n,0);
        dp[0]=nums[0];
        dp[1]=max(nums[0],nums[1]);
        for(int i=2;i<n;i++){
            dp[i]=max(dp[i-1],dp[i-2]+nums[i]);
        }
        return dp[n-1];
    }
};
